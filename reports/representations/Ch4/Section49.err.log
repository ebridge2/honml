Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/asyncio/base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from graspologic.simulations import sbm
import numpy as np
from graphbook_code import dcsbm
from sklearn.preprocessing import LabelEncoder

# Create block probability matrix B
K = 3
B = np.full(shape=(K, K), fill_value=0.15)
np.fill_diagonal(B, 0.4)

# degree-correct the different groups for linkedin
ml, admin, marketing = nks = [50, 25, 25]
theta = np.ones((np.sum(nks), 1))
theta[(ml):(ml + admin), :] = np.sqrt(2)

# our dcsbm function only works with communities encoded 1,2,...,K
# so we'll use a LabelEncoder to map labels to natural numbers
labels = np.repeat(["ML", "AD", "MA"], nks)
le = LabelEncoder().fit(labels)
z = le.transform(labels) + 1

# sample the random networks
A_facebook = sbm(n=nks, p=B)
A_insta = sbm(n=nks, p=B)
A_linkedin, P_linkedin = dcsbm(z, theta, B, return_prob=True)
------------------

----- stderr -----
/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/tqdm/auto.py:21: TqdmWarning: IProgress not found. Please update jupyter and ipywidgets. See https://ipywidgets.readthedocs.io/en/stable/user_install.html
  from .autonotebook import tqdm as notebook_tqdm
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[2], line 25[0m
[1;32m     23[0m A_facebook [38;5;241m=[39m sbm(n[38;5;241m=[39mnks, p[38;5;241m=[39mB)
[1;32m     24[0m A_insta [38;5;241m=[39m sbm(n[38;5;241m=[39mnks, p[38;5;241m=[39mB)
[0;32m---> 25[0m A_linkedin, P_linkedin [38;5;241m=[39m [43mdcsbm[49m[43m([49m[43mz[49m[43m,[49m[43m [49m[43mtheta[49m[43m,[49m[43m [49m[43mB[49m[43m,[49m[43m [49m[43mreturn_prob[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/graphbook_code/sbm.py:54[0m, in [0;36mdcsbm[0;34m(z, theta, B, directed, loops, return_prob)[0m
[1;32m     50[0m [38;5;250m[39m[38;5;124;03m"""[39;00m
[1;32m     51[0m [38;5;124;03mA function to sample a DCSBM.[39;00m
[1;32m     52[0m [38;5;124;03m"""[39;00m
[1;32m     53[0m P [38;5;241m=[39m generate_dcsbm_pmtx(z, theta, B)
[0;32m---> 54[0m robj [38;5;241m=[39m [43msample_edges[49m(P, directed[38;5;241m=[39mdirected, loops[38;5;241m=[39mloops)
[1;32m     55[0m [38;5;28;01mif[39;00m return_prob:
[1;32m     56[0m     robj [38;5;241m=[39m (robj, P)

[0;31mNameError[0m: name 'sample_edges' is not defined

